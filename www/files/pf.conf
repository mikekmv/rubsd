# $RuOBSD: pf.conf,v 1.2 2001/10/11 03:53:45 form Exp $
#
# Пример настройки firewall для PF (OpenBSD 3.0 и новее).
#
#   Внешняя сеть:     fxp0: 194.226.167.16 255.255.255.248
#   Внутренняя сеть:  fxp1: 194.226.167.24 255.255.255.248
#   Виртуальная сеть: rl0:  192.168.1.0    255.255.255.0
#
# Пропускать пакеты, не заблокированные другими правилами. Пропускать
# все пакеты на loopback интерфейсе без дальнейшей проверки.
#
pass in all
pass out all
pass in quick on lo0 all
#
# Не пропускать пакеты от зарезервированных сетей и loopback сети.
#
block in log quick on { fxp0, fxp1 } from { 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16, 127.0.0.0/8 } to any
block in log quick on rl0 from { 10.0.0.0/8, 172.16.0.0/12, 127.0.0.0/8 } to any
#
# Предотвратить попытки IP spoofing'а.
#
block in log quick on { fxp1, rl0 } from 194.226.167.16/29 to any
block in log quick on { fxp0, rl0 } from 194.226.167.24/29 to any
#
# Не пропускать незащищенные соединения (telnet, pop3, imap, shell, xdmcp)
# с внешней сети.
#
block return-rst in log quick on fxp0 proto tcp from any to any port { 23, 110, 143, 514 }
block return-icmp in log quick on fxp0 proto udp from any to any port 177



ext_if		= "fxp0"
ext_ip 		= "194.226.167.18"
ext_net 	= "194.226.167.16/29"

int_if  	= "fxp1"
int_ip  	= "194.226.167.25"
int_net 	= "194.226.167.24/29"

nat_if		= "rl0"

ipips		= "212.20.30.249"
tcps		= "{ 21, 22, 25, 53, 80, 113, 123, 943, 995, 1023 >< 65535 }"
udps		= "{ 53, 123 }"
ipv6s		= "212.20.30.249"

res_nets	= "{ 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16 }"
bad_nets	= "{ 127.0.0.0/8, 255.255.255.255 }"

# Block everything by default. Block and log tcp and udp.
block             out     on $ext_if           all
block             in      on $ext_if           all
block return-rst  out log on $ext_if proto tcp all
block return-rst  in  log on $ext_if proto tcp all
block return-icmp out log on $ext_if proto udp all
block return-icmp in  log on $ext_if proto udp all

# Block and log outgoing packets addressed to reserved address space.
block out log quick on $ext_if from any to $res_nets

# Block and log incoming packets from reserved address space and invalid
# addresses, silently drop broadcasts, prevent IP spoofing attempts.
block in log quick on $ext_if from $res_nets to any
block in log quick on $ext_if from $bad_nets to any
block in     quick on $ext_if from any       to 255.255.255.255
block in log quick on $ext_if from $int_net  to any

# Pass out/in certain ICMP queries and keep state (ping).
pass out on $ext_if inet proto icmp all icmp-type 8 code 0 keep state
pass in  on $ext_if inet proto icmp all icmp-type 8 code 0 keep state

# Pass out all TCP/UDP connections and keep state.
pass out on $ext_if proto { tcp, udp } all keep state

# Pass in certain TCP/UDP connections and keep state.
pass in on $ext_if proto tcp from any to any port $tcps flags S/SA keep state
pass in on $ext_if proto udp from any to any port $udps keep state

# Pass passive FTP data connections
pass in on $ext_if proto tcp from any port 20 to any flags S/SA keep state

# Pass in/out ipip encapsulation protocol
pass out on $ext_if proto ipip from $ext_ip to $ipips
pass in  on $ext_if proto ipip from $ipips  to $ext_ip

# Block proxy requests from private network
pass in quick on $nat_if proto tcp from 172.16.0.100 to 10.0.0.1 port 3128
block return-rst in log quick on $nat_if proto tcp from any to 10.0.0.1

# Pass telnet for kosty
pass in on $ext_if proto tcp from 194.85.126.38 to any port 23

# Pass IPv6 protocol
pass out on $ext_if proto ipv6 from $ext_ip to $ipv6s
pass in  on $ext_if proto ipv6 from $ipv6s  to $ext_ip

# Block incoming proxy connections
block in on $ext_if proto tcp from any to any port { 1080, 3128, 8080 }
