# $RuOBSD: pf.conf,v 1.2 2005/08/22 18:21:19 form Exp $
#
# Пример настройки PF для маршрутизатора с трансляцией адресов и
# переадресацией некоторых сервисов во внутреннюю сеть.
#
#   WAN              LAN
#    |      +------------+--------
#    |      |            |
# +-rl0----em0-+  +--------------+
# |            |  |  10.10.10.2  |
# +------------+  +--------------+

# Внешний и внутренний интерфейсы.
#
ext_if		= "rl0"
int_if		= "em0"

# TCP/UDP сервисы, обслуживаемые маршрутизатором.
#
tcp_svc		= "ftp ssh smtp domain www https imaps"
udp_svc		= "domain"

# TCP сервисы, обслуживаемые внутренним сервером.
#
tcp_rdr		= "3389"
host_rdr	= "10.10.10.2"

# Таблицы черного и белого списков для spamd.
#
#table <spamd> persist
#table <spamd-white> persist

# Выполнить нормализацию всех пакетов.
#
scrub in

# Транслировать внутренние адреса в (основной) адрес внешнего интерфейса.
#
nat on $ext_if from !($ext_if) -> ($ext_if:0)

# Пропустить FTP через transparent proxy.
#
no rdr on $int_if proto tcp to { ($int_if) ($ext_if) } port ftp
rdr on $int_if proto tcp to port ftp -> 127.0.0.1 port 8021

# Перенаправить адреса из черного списка в spamd.
#
#rdr pass on $ext_if proto tcp from <spamd> to port smtp \
#	-> 127.0.0.1 port spamd

# Перенаправить адреса не входящие в белый список в spamd (используется
# в режиме greylist.
#
#rdr pass on $ext_if proto tcp from !<spamd-white> to port smtp \
#	-> 127.0.0.1 port spamd

# Переадресовать TCP сервисы, обслуживаемые внутренним сервером.
#
rdr pass on $ext_if proto tcp to port { $tcp_rdr } -> $host_rdr

# Защита от IP spoofing.
#
pass quick on { lo $int_if }
antispoof quick for { lo $int_if }

# По умолчанию блокировать все на внешнем интерфейсе. Для TCP соединений
# возвращать RST.
#
block on $ext_if
block return-rst in on $ext_if proto tcp

# Разрешить исходящие ICMP ping пакеты, любой UDP трафик и TCP соединения.
#
pass out on $ext_if inet proto icmp icmp-type echoreq code 0 keep state
pass out on $ext_if proto udp keep state
pass out on $ext_if proto tcp flags S/SA keep state

# Разрешить входящие ICMP ping пакеты, обслуживаемые UDP и TCP сервисы.
#
pass in on $ext_if inet proto icmp icmp-type echoreq code 0 keep state
pass in on $ext_if proto udp to port { $udp_svc } keep state
pass in on $ext_if proto tcp to port { $tcp_svc } flags S/SA keep state

# Разрешить вхордящие TCP соединения для FTP proxy.
#
pass in on $ext_if proto tcp to port > 49151 flags S/SA user proxy keep state

# Разрешить входящие TCP соединения для FTP сервера (passive mode).
# Правило расчитано на то, что FTP сервер обслуживает только anonymous
# подключения. Если планируется использовать FTP сервер для подключения
# реальных пользователей, следует заменить "user ftp" на "user >= 0".
#
pass in on $ext_if proto tcp to port > 49151 flags S/SA user ftp keep state
