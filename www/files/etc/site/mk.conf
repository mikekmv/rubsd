# $RuOBSD: mk.conf,v 1.40 2006/10/12 08:55:35 form Exp $

# Настройки suexec
#
PATCH_SUEXEC?=		No		# Поменять DOCROOT для suexec
SUEXEC_DOCROOT?=	/home/www	# Корневой каталог серверов
SETUID_SUEXEC?=		No		# Устанавливать как setuid

# Настройки сборки sendmail
#
SENDMAIL_SASL?=		No		# Включить поддержку SASL2

# Другие хреновины
#
PATCH_MOUNT?=		Yes		# Укоротить кое-какие надписи mount
PATCH_MODLOAD?=		Yes		# Использовать /dev/ksyms в modload
PATCH_TOP?=		Yes		# Добавить в top печать uptime
PATCH_ARP?=		Yes		# Поддержка auto ether_addr в arp
PATCH_LOCALE?=		No		# Подружить ru XKB и X программы.
#					# Для >= 3.8 не требуется.
PATCH_PAX?=		Yes		# Научить tar & pax использовать bzip2
PATCH_IFCONFIG?=	Yes		# Убрать ошибки [-]carpdemote для
#					# не-GENERIC ядер.

ARP_PATCH?=		arp.patch	# Следует заменить на
#					# `arp-37.patch' для 3.7
TOP_PATCH?=		top.patch	# Следует заменить на
#					# `top-37.patch' для 3.7

# Качать distfiles для портов сначала отсюда
#
#.if defined(DIST_SUBDIR) && ${DIST_SUBDIR} != ""
#MASTER_SITE_OVERRIDE?=	ftp://pdp-11.org.ru/pub/OpenBSD/distfiles/${DIST_SUBDIR}/ \
#			ftp://ftp.chg.ru/pub/FreeBSD/distfiles/${DIST_SUBDIR}/ \
#			ftp://ftp.chg.ru/pub/FreeBSD/distfiles/
#.else
#MASTER_SITE_OVERRIDE?=	ftp://pdp-11.org.ru/pub/OpenBSD/distfiles/ \
#			ftp://ftp.chg.ru/pub/FreeBSD/distfiles/
#.endif

# Proxy сервер, используемый при скачивании файлов для портов
#
#FETCH_CMD?=		http_proxy=http://proxy.some.domain:3128 \
#			ftp_proxy=http://proxy.some.domain:3128 \
#			/usr/bin/ftp -V -m

# Из-за кривости bsd.port.mk проверяем таргет...
#
.if make(clean)
CLEANDEPENDS?=		No		# Чистить зависимые порты по make clean
.endif

#SUDO?=			/usr/bin/sudo	# sudo (для make build)

SITEDIR?=		/etc/site	# Где все это лежит
BSDSRCDIR?=		/usr/src	# Где находится src
BSDOBJDIR?=		/usr/obj	# Где находится obj
PORTSDIR?=		/usr/ports	# Где находится ports
#WRKOBJDIR?=		/usr/obj/ports	# Рабочий каталог для сборки портов

# Научка GQmpeg конвертировать windows-1251 заголовки в koi8-r
#
.if ${.CURDIR} == ${PORTSDIR}/audio/gqmpeg
CONFIGURE_ARGS+=	--enable-russian
.endif

# Патч перекодировки тагов в mpg123 (из cp1251 в koi8-r)
#
.if ${.CURDIR} == ${PORTSDIR}/audio/mpg123
MODULES=	iconv
pre-build:
	@${ECHO_MSG} "===>  Applying tag conversion patch"
	@cd ${WRKSRC} && ${PATCH} -sp0 < ${SITEDIR}/patches/mpg123-iconv.patch
.endif

# Установка IRC сервера по умолчанию для BitchX и IrcII на irc.openbsd.ru
#
.if ${.CURDIR} == ${PORTSDIR}/net/ircII || ${.CURDIR} == ${PORTSDIR}/net/bitchx
CONFIGURE_ARGS+=	--with-default-server=irc.openbsd.ru
.endif

# Научка ipfm запускать несколько копий и создавать pidfile в виде
# /var/run/ipfm-<interface>.pid
#
.if ${.CURDIR} == ${PORTSDIR}/net/ipfm
post-patch:
	@${ECHO_MSG} "===>  Applying IPFM multiply interfaces patch"
	@${PATCH} ${PATCH_ARGS} < ${SITEDIR}/patches/ipfm.patch
.endif

# Отучка courier-imap писать IPv4->IPv6 mapped адреса в логе (и от IPv6 :)
#
.if ${.CURDIR} == ${PORTSDIR}/mail/courier-imap
CONFIGURE_ARGS+=	--without-ipv6
.endif

# Улучшение SPAM-protect feature в hypermail
#
.if ${.CURDIR} == ${PORTSDIR}/mail/hypermail
post-patch:
	@${ECHO_MSG} "===>  Applying SPAM-protect patch"
	@cd ${WRKDIST} && ${PATCH} -sp0 < ${SITEDIR}/patches/hypermail.patch
.endif

# Запись IP адреса PPTP клиента в env PPTP_CLIENT для poptop.
#
.if ${.CURDIR} == ${PORTSDIR}/net/poptop
post-patch:
	@${ECHO_MSG} "===>  Applying PPTP_CLIENT env patch"
	@cd ${WRKDIST} && ${PATCH} -sp0 < ${SITEDIR}/patches/poptop.patch
.endif

# Небольшие фиксы для birda которые grange лениво коммитнуть в порт ;)
#
.if ${.CURDIR} == ${PORTSDIR}/comms/birda
post-patch:
	@${ECHO_MSG} "===>  Applying more patches"
	@cd ${WRKDIST} && ${PATCH} -sp0 < ${SITEDIR}/patches/birda.patch
.endif

# Убрать нахрен дурацкие joe locks и autoindent, которые только мешают.
#
.if ${.CURDIR} == ${PORTSDIR}/editors/joe
CFLAGS+=	-DNO_DOTLOCK

post-patch:
	@${ECHO_MSG} "===>  Applying SITE patches"
	@cd ${WRKDIST} && ${PATCH} -sp0 < ${SITEDIR}/patches/joe.patch
.endif

# Сделать нормальную иконку для 16x16 mozilla-thunderbird
#
.if ${.CURDIR} == ${PORTSDIR}/mail/mozilla-thunderbird
post-patch:
	@${ECHO_MSG} "===>  Applying SITE patches"
	@cd ${WRKDIST} && ${PATCH} -sp0 < ${SITEDIR}/patches/thunderbird.patch
.endif

# Добавить поддержку цветной ASCII графики :)
#
.if ${.CURDIR} == ${PORTSDIR}/x11/mplayer
FLAVORS+=		caca

.if defined(FLAVOR) && ${FLAVOR:L:Mcaca}
CONFIGURE_ARGS:=	${CONFIGURE_ARGS:S/--disable-caca/--enable-caca/}
LIB_DEPENDS+=		caca::graphics/libcaca
.endif
.endif

# Поддержка 16 линий в DHU/DHV мультиплексорах в SIMH.
# Установка и использование VAX-780 boot code.
# требуется только для <= OpenBSD 3.9.
#
#.if ${.CURDIR} == ${PORTSDIR}/emulators/simh
#COPTS+=			-DPATH_VMB_EXE=\"${PREFIX}/lib/simh/vax/vmb.exe\"
#
#PLIST=			${WRKBUILD}/PLIST
#
#post-patch:
#	@${ECHO_MSG} "===>  Applying SITE patches"
#	@cd ${WRKDIST} && \
#	    ${PATCH} -sp0 < ${SITEDIR}/patches/simh-vh.patch && \
#	    ${PATCH} -sp0 < ${SITEDIR}/patches/simh-vax780.patch
#	@awk -f ${SITEDIR}/patches/simh-vax780.awk < ${PKGDIR}/PLIST \
#	    > ${WRKBUILD}/PLIST
#
#post-install:
#	${INSTALL_DATA} ${WRKDIST}/VAX/vmb.exe ${PREFIX}/lib/simh/vax
#.endif

# Разборки с suexec
#
.if ${.CURDIR} == ${BSDSRCDIR}/usr.sbin/httpd && defined(PATCH_SUEXEC) \
    && ${PATCH_SUEXEC:U} == YES && ${.CURDIR} != ${.OBJDIR}
prereq:	${.OBJDIR}/config.status
	@echo "Patching suexec..."
	@sh ${SITEDIR}/patches/suexec.sh ${SUEXEC_DOCROOT}
.endif

.if ${.CURDIR} == ${BSDSRCDIR}/usr.sbin && defined(SETUID_SUEXEC) && \
    ${SETUID_SUEXEC:U} == YES
afterinstall:
	@chmod u+s ${DESTDIR}/usr/sbin/suexec
.endif

# Разборки с sendmail
#
.if ${.CURDIR} == ${BSDSRCDIR}/gnu/usr.sbin/sendmail/sendmail && \
    exists(/usr/local/include/sasl/sasl.h) && \
    defined(SENDMAIL_SASL) && ${SENDMAIL_SASL:U} == YES
ENVDEF+=		-DSASL -I/usr/local/include/sasl
LDADD+=			-L/usr/local/lib -lsasl2
.endif

# Разборки с mount
#
.if ${.CURDIR} == ${BSDSRCDIR}/sbin/mount && defined(PATCH_MOUNT) && \
    ${PATCH_MOUNT:U} == YES && ${.CURDIR} != ${.OBJDIR}
CFLAGS+=		-I${.CURDIR}
CLEANFILES+=		mount.c mount.c.orig

beforedepend: mount.c.orig

mount.c.orig:
.if !defined(SITE_REENTER)
	@echo "Patching mount..." && \
	    cp ${.CURDIR}/mount.c ${.OBJDIR} && cd ${.OBJDIR} && \
	    patch -sp0 < ${SITEDIR}/patches/mount.patch && \
	    cd ${.CURDIR} && ${MAKE} depend SITE_REENTER=Yes
.endif
.endif

# Разборки с modload
#
.if ${.CURDIR} == ${BSDSRCDIR}/sbin/modload && defined(PATCH_MODLOAD) && \
    ${PATCH_MODLOAD:U} == YES && ${.CURDIR} != ${.OBJDIR}

CFLAGS+=		-I${.CURDIR}
CLEANFILES+=		modload.8 modload.8.orig modload.c modload.c.orig

beforedepend: modload.8.orig modload.c.orig

modload.8.orig modload.c.orig:
.if !defined(SITE_REENTER)
	@echo "Patching modload..." && \
	    cp ${.CURDIR}/modload.8 ${.CURDIR}/modload.c ${.OBJDIR} && \
	    cd ${.OBJDIR} && patch -sp0 < ${SITEDIR}/patches/modload.patch && \
	    cd ${.CURDIR} && ${MAKE} depend SITE_REENTER=Yes
.endif
.endif

# Разборки с top
#
.if ${.CURDIR} == ${BSDSRCDIR}/usr.bin/top && defined(PATCH_TOP) && \
    ${PATCH_TOP:U} == YES && ${.CURDIR} != ${.OBJDIR}

CFLAGS+=		-I${.CURDIR}
CLEANFILES+=		display.c display.c.orig machine.c machine.c.orig \
			machine.h machine.h.orig top.c top.c.orig

beforedepend: display.c.orig machine.c.orig machine.h.orig top.c.orig

display.c.orig machine.c.orig machine.h.orig top.c.orig:
.if !defined(SITE_REENTER)
	@echo "Patching top..." && \
	    cd ${.CURDIR} && \
	    cp display.c machine.c machine.h top.c ${.OBJDIR} && \
	    cd ${.OBJDIR} && patch -sp0 < ${SITEDIR}/patches/${TOP_PATCH} && \
	    cd ${.CURDIR} && ${MAKE} depend SITE_REENTER=Yes
.endif
.endif

# Разборки с arp
#
.if ${.CURDIR} == ${BSDSRCDIR}/usr.sbin/arp && defined(PATCH_ARP) && \
    ${PATCH_ARP:U} == YES && ${.CURDIR} != ${.OBJDIR}

CFLAGS+=		-I${.CURDIR}
CLEANFILES+=		arp.8 arp.c arp.8.orig arp.c.orig

beforedepend: arp.8.orig arp.c.orig

arp.8.orig arp.c.orig:
.if !defined(SITE_REENTER)
	@echo "Patching arp..." && \
	    cd ${.CURDIR} && cp arp.8 arp.c ${.OBJDIR} && \
	    cd ${.OBJDIR} && patch -sp0 < ${SITEDIR}/patches/${ARP_PATCH} && \
	    cd ${.CURDIR} && ${MAKE} depend SITE_REENTER=Yes
.endif
.endif

# Разборки с локалью
#
.if ${.CURDIR} == ${BSDSRCDIR}/lib/libc && defined(PATCH_LOCALE) && \
    ${PATCH_LOCALE:U} == YES && ${.CURDIR} != ${.OBJDIR}
CLEANFILES+=            setlocale.c setlocale.c.orig

beforedepend: setlocale.c.orig

setlocale.c.orig:
.if !defined(SITE_REENTER)
	@echo "Patching locale..." && \
	    cp ${.CURDIR}/locale/setlocale.c ${.OBJDIR} && cd ${.OBJDIR} && \
	    patch -sp0 < ${SITEDIR}/patches/locale-hack.patch && \
	    cd ${.CURDIR} && ${MAKE} depend SITE_REENTER=Yes
.endif
.endif

# Разборки с pax
#
.if ${.CURDIR} == ${BSDSRCDIR}/bin/pax && defined(PATCH_PAX) && \
    ${PATCH_PAX:U} == YES && ${.CURDIR} != ${.OBJDIR}

CFLAGS+=		-I${.CURDIR}
CLEANFILES+=		options.c.orig pax.1.orig tar.1.orig

beforedepend: options.c.orig pax.1.orig tar.1.orig

options.c.orig pax.1.orig tar.1.orig:
.if !defined(SITE_REENTER)
	@echo "Patching pax..." && \
	    cd ${.CURDIR} && cp options.c pax.1 tar.1 ${.OBJDIR} && \
	    cd ${.OBJDIR} && patch -sp0 < ${SITEDIR}/patches/pax.patch && \
	    cd ${.CURDIR} && ${MAKE} depend SITE_REENTER=Yes
.endif
.endif

# Разборки с ifconfig
#
.if ${.CURDIR} == ${BSDSRCDIR}/sbin/ifconfig && defined(PATCH_IFCONFIG) && \
    ${PATCH_IFCONFIG:U} == YES && ${.CURDIR} != ${.OBJDIR}

CLEANFILES+=		ifconfig.c ifconfig.c.orig

beforedepend: ifconfig.c.orig

ifconfig.c.orig:
.if !defined(SITE_REENTER)
	@echo "Patching ifconfig..." && \
	    cd ${.CURDIR} && cp ifconfig.c ${.OBJDIR} && \
	    cd ${.OBJDIR} && \
	    patch -sp0 < ${SITEDIR}/patches/ifconfig.patch && \
	    cd ${.CURDIR} && ${MAKE} depend SITE_REENTER=Yes
.endif
.endif
