# $RuOBSD: mk.conf,v 1.3 2004/12/05 01:39:30 form Exp $

# Настройки собираемой системы.
#
SKEY?=			Yes		# Включать поддержку S/Key
KERBEROS5?=		Yes		# Включать поддержку Kerberos V
YP?=			Yes		# Включать поддержку NIS
TCP_WRAPPERS?=		Yes		# Включать поддержку libwrap и tcpd
AFS?=			Yes		# Включать поддержку AFS

NO_GAMES?=		No		# Не собирать игры
NO_PROFILE?=		No		# Не собирать profiled библиотеки

CRUNCH?=		No		# Собирать crunchgen и crunchide

# Настройки suexec для хостинга
#
PATCH_SUEXEC?=		No		# Поменять DOCROOT для suexec
SUEXEC_DOCROOT?=	/home/www	# Корневой каталог серверов
SETUID_SUEXEC?=		No		# Устанавливать как setuid

# Настройки сборки sendmail
#
SENDMAIL_SASL?=		No		# Включить поддержку SASL2

# Начиная с OpenBSD 3.6, libmilter автоматически собирается и
# устанавливается.
#SENDMAIL_LIBMILTER?=	No		# Включить поддержку libmilter
#INSTALL_LIBMILTER?=	No		# Устанавливать libmilter

# Разрешение авторизации в ppp по PostgreSQL базе
#
# Авторизация по PostgreSQL включается в ppp.conf командой
# set postgres ["conninfo"].
#
# В базе должна присутствовать таблица как минимум со следующими полями:
#
# CREATE TABLE ppp (
#	authname	VARCHAR(32)	NOT NULL UNIQUE,
#	authkey		TEXT,
#	hisaddr		TEXT,
#	label		TEXT,
#	enabled		BOOLEAN		NOT NULL DEFAULT TRUE
# );
#
# Типы TEXT/VARCHAR взаимозаменяемы.
#
PPP_PGSQL?=		No		# Разрешить авторизацию по PostgreSQL

# Другие хреновины
#
PATCH_MOUNT?=		Yes		# Укоротить кое-какие надписи mount
PATCH_MODLOAD?=		Yes		# Использовать /dev/ksyms в modload
PATCH_TOP?=		Yes		# Добавить в top печать uptime
PATCH_LOCALE?=		Yes		# Подружить ru XKB и X программы

# Качать distfiles для портов сначала отсюда
#
#MASTER_SITE_OVERRIDE?=	ftp://pdp-11.org.ru/pub/OpenBSD/distfiles/${DIST_SUBDIR}/

PIPE?=			-pipe		# Использовать pipes вместо /tmp при
#					# компиляции

SUDO?=			/usr/bin/sudo	# sudo (для make build)

SITEDIR?=		/etc/site	# Где все это лежит
BSDSRCDIR?=		/usr/src	# Где находится src
BSDOBJDIR?=		/usr/obj	# Где находится obj
PORTSDIR?=		/usr/ports	# Где находится ports

# Научка GQmpeg конвертировать windows-1251 заголовки в koi8-r
#
.if ${.CURDIR} == ${PORTSDIR}/audio/gqmpeg
CONFIGURE_ARGS+=	--enable-russian
.endif

# Установка IRC сервера по умолчанию для BitchX и IrcII на irc.pdp-11.org.ru
#
.if ${.CURDIR} == ${PORTSDIR}/net/ircII || ${.CURDIR} == ${PORTSDIR}/net/bitchx
CONFIGURE_ARGS+=	--with-default-server=irc.pdp-11.org.ru
.endif

# Научка ipfm запускать несколько копий и создавать pidfile в виде
# /var/run/ipfm-<interface>.pid
#
.if ${.CURDIR} == ${PORTSDIR}/net/ipfm
post-patch:
	@${PATCH} ${PATCH_ARGS} < ${SITEDIR}/patches/ipfm.patch
.endif

# Отучка courier-imap писать IPv4->IPv6 mapped адреса в логе (и от IPv6 :)
#
.if ${.CURDIR} == ${PORTSDIR}/mail/courier-imap
CONFIGURE_ARGS+=	--without-ipv6
.endif

# Улучшение SPAM-protect feature в hypermail
#
.if ${.CURDIR} == ${PORTSDIR}/mail/hypermail
post-patch:
	@${ECHO_MSG} "===>  Applying SPAM-protect patch"
	@cd ${WRKSRC} && ${PATCH} -sp0 < ${SITEDIR}/patches/hypermail.patch
.endif

# Грязный хак для sylpheed чтобы subject не поганил
# (не нужен если выше включена опция PATCH_LOCALE).
#
#.if ${.CURDIR} == ${PORTSDIR}/mail/sylpheed
#post-patch:
#	@${ECHO_MSG} "===>  Applying ugly charset hack"
#	@cd ${WRKSRC} && ${PATCH} -sp0 < \
#	    ${SITEDIR}/patches/sylpheed-charset.patch
#.endif

# Включение поддержки SSL в postgresql. Начиная с OpenBSD 3.6 поддержка
# уже включена в порте.
#
#.if ${.CURDIR} == ${PORTSDIR}/databases/postgresql
#CONFIGURE_ARGS+=	--with-openssl=/usr
#.endif

# Запись IP адреса PPTP клиента в env PPTP_CLIENT для poptop.
#
.if ${.CURDIR} == ${PORTSDIR}/net/poptop
post-patch:
	@${ECHO_MSG} "===>  Applying PPTP_CLIENT env patch"
	@cd ${WRKSRC} && ${PATCH} -sp0 < ${SITEDIR}/patches/poptop.patch
.endif

# Небольшие фиксы для birda которые grange лениво коммитнуть в порт ;)
#
.if ${.CURDIR} == ${PORTSDIR}/comms/birda
post-patch:
	@${ECHO_MSG} "===>  Applying more patches"
	@cd ${WRKSRC} && ${PATCH} -sp0 < ${SITEDIR}/patches/birda.patch
.endif

# Разборки с suexec
#
.if ${.CURDIR} == ${BSDSRCDIR}/usr.sbin/httpd && defined(PATCH_SUEXEC) \
    && ${PATCH_SUEXEC:U} == YES && ${.CURDIR} != ${.OBJDIR}
prereq:	${.OBJDIR}/config.status
	@echo "Patching suexec..."
	@sh ${SITEDIR}/patches/suexec.sh ${SUEXEC_DOCROOT}
.endif

.if ${.CURDIR} == ${BSDSRCDIR}/usr.sbin && defined(SETUID_SUEXEC) && \
    ${SETUID_SUEXEC:U} == YES
afterinstall:
	@chmod u+s ${DESTDIR}/usr/sbin/suexec
.endif

# Разборки с sendmail
#
.if ${.CURDIR} == ${BSDSRCDIR}/gnu/usr.sbin/sendmail/sendmail && \
    exists(/usr/local/include/sasl/sasl.h) && \
    defined(SENDMAIL_SASL) && ${SENDMAIL_SASL:U} == YES
ENVDEF+=		-DSASL -I/usr/local/include/sasl
LDADD+=			-L/usr/local/lib -lsasl2
.endif

# Начиная с OpenBSD 3.6, libmilter автоматически собирается и
# устанавливается.
#.if ${.CURDIR} == ${BSDSRCDIR}/gnu/usr.sbin/sendmail && \
#    defined(SENDMAIL_LIBMILTER) && ${SENDMAIL_LIBMILTER:U} == YES
#WANT_LIBMILTER=		1
#.if !make(install)
#SUBDIR:=		libmilter ${SUBDIR}
#.elif defined(INSTALL_LIBMILTER) && ${INSTALL_LIBMILTER:U} == YES
#SUBDIR:=		libsm libmilter ${SUBDIR} 
#
#afterinstall:
#	install -o ${BINOWN} -g ${BINGRP} -m ${DIRMODE} -d \
#	    ${DESTDIR}/usr/include/libmilter
#	install -o ${BINOWN} -g ${BINGRP} -m ${NONBINMODE} \
#	    ${.CURDIR}/include/libmilter/*.h ${DESTDIR}/usr/include/libmilter
#.endif
#.endif
#
#.if (${.CURDIR} == ${BSDSRCDIR}/gnu/usr.sbin/sendmail/libmilter || \
#    ${.CURDIR} == ${BSDSRCDIR}/gnu/usr.sbin/sendmail/sendmail) && \
#    defined(SENDMAIL_LIBMILTER) && ${SENDMAIL_LIBMILTER:U} == YES
#WANT_LIBMILTER=		1
#.endif

# Разборки с ppp
#
.if ${.CURDIR} == ${BSDSRCDIR}/usr.sbin/ppp/ppp && defined(PPP_PGSQL) && \
    ${PPP_PGSQL:U} == YES && exists(/usr/local/lib/libpq.a) && \
    ${.CURDIR} != ${.OBJDIR}
CFLAGS+=		-DPOSTGRES -I/usr/local/include/postgresql
CFLAGS+=		-I${.CURDIR}
CLEANFILES+=		auth.c auth.c.orig bundle.h bundle.h.orig
CLEANFILES+=		command.c command.c.orig

DPADD+=			/usr/local/lib/libpq.a ${LIBSSL} ${LIBCRYPTO}
LDADD+=			/usr/local/lib/libpq.a -lssl -lcrypto

beforedepend: auth.c.orig bundle.h.orig command.c.orig

auth.c.orig bundle.h.orig command.c.orig:
.if !defined(SITE_REENTER)
	@echo "Applying PostgreSQL authentication patch..." && \
	    cp ${.CURDIR}/auth.c ${.CURDIR}/bundle.h ${.CURDIR}/command.c \
		${.OBJDIR} && \
	    patch -sp0 < ${SITEDIR}/patches/ppp-pgsql.patch && \
	    cd ${.CURDIR} && ${MAKE} depend SITE_REENTER=Yes
.endif
.endif

# Разборки с mount
#
.if ${.CURDIR} == ${BSDSRCDIR}/sbin/mount && defined(PATCH_MOUNT) && \
    ${PATCH_MOUNT:U} == YES && ${.CURDIR} != ${.OBJDIR}
CFLAGS+=		-I${.CURDIR}
CLEANFILES+=		mount.c mount.c.orig

beforedepend: mount.c.orig

mount.c.orig:
.if !defined(SITE_REENTER)
	@echo "Patching mount..." && \
	    cp ${.CURDIR}/mount.c ${.OBJDIR} && cd ${.OBJDIR} && \
	    patch -sp0 < ${SITEDIR}/patches/mount.patch && \
	    cd ${.CURDIR} && ${MAKE} depend SITE_REENTER=Yes
.endif
.endif

# Разборки с modload
#
.if ${.CURDIR} == ${BSDSRCDIR}/sbin/modload && defined(PATCH_MODLOAD) && \
    ${PATCH_MODLOAD:U} == YES && ${.CURDIR} != ${.OBJDIR}

CFLAGS+=		-I${.CURDIR}
CLEANFILES+=		modload.8 modload.8.orig modload.c modload.c.orig

beforedepend: modload.8.orig modload.c.orig

modload.8.orig modload.c.orig:
.if !defined(SITE_REENTER)
	@echo "Patching modload..." && \
	    cp ${.CURDIR}/modload.8 ${.CURDIR}/modload.c ${.OBJDIR} && \
	    cd ${.OBJDIR} && patch -sp0 < ${SITEDIR}/patches/modload.patch && \
	    cd ${.CURDIR} && ${MAKE} depend SITE_REENTER=Yes
.endif
.endif

# Разборки с top
#
.if ${.CURDIR} == ${BSDSRCDIR}/usr.bin/top && defined(PATCH_TOP) && \
    ${PATCH_TOP:U} == YES && ${.CURDIR} != ${.OBJDIR}

CFLAGS+=		-I${.CURDIR}
CLEANFILES+=		display.c display.c.orig machine.c machine.c.orig \
			machine.h machine.h.orig top.c top.c.orig

beforedepend: display.c.orig machine.c.orig machine.h.orig top.c.orig

display.c.orig machine.c.orig machine.h.orig top.c.orig:
.if !defined(SITE_REENTER)
	@echo "Patching top..." && \
	    cd ${.CURDIR} && \
	    cp display.c machine.c machine.h top.c ${.OBJDIR} && \
	    cd ${.OBJDIR} && patch -sp0 < ${SITEDIR}/patches/top.patch && \
	    cd ${.CURDIR} && ${MAKE} depend SITE_REENTER=Yes
.endif
.endif

# Разборки с локалью
#
.if ${.CURDIR} == ${BSDSRCDIR}/lib/libc && defined(PATCH_LOCALE) && \
    ${PATCH_LOCALE:U} == YES && ${.CURDIR} != ${.OBJDIR}
CLEANFILES+=            setlocale.c setlocale.c.orig

beforedepend: setlocale.c.orig

setlocale.c.orig:
.if !defined(SITE_REENTER)
	@echo "Patching locale..." && \
	    cp ${.CURDIR}/locale/setlocale.c ${.OBJDIR} && cd ${.OBJDIR} && \
	    patch -sp0 < ${SITEDIR}/patches/locale-hack.patch && \
	    cd ${.CURDIR} && ${MAKE} depend SITE_REENTER=Yes
.endif
.endif

# Разборки с игрушками
#
.if ${.CURDIR} == ${BSDSRCDIR} && defined(NO_GAMES) && ${NO_GAMES:U} == YES
SKIPDIR+=	games
.endif

# Разборки с библиотеками
#
.if defined(NO_PROFILE) && ${NO_PROFILE:U} == YES && \
    ${.CURDIR:C/^${BSDSRCDIR}\/lib\///1} != ${.CURDIR}
NOPROFILE=
.endif

# Разборки с crunch
#
.if ${.CURDIR} == ${BSDSRCDIR} && defined(CRUNCH) && ${CRUNCH:U} == YES && \
    !make(obj) && !make(clean) && !make(cleandir)
SUBDIR+=	distrib/crunch
.endif
