$RuOBSD$

--- bioctl.c.orig	Wed Aug  6 04:11:13 2008
+++ bioctl.c	Wed Aug  6 04:25:59 2008
@@ -85,6 +85,7 @@
 u_int32_t		cflags = 0;
 int			rflag = 8192;
 
+static char		*pass_file;
 struct bio_locate	bl;
 
 int
@@ -103,7 +104,7 @@
 	if (argc < 2)
 		usage();
 
-	while ((ch = getopt(argc, argv, "a:b:C:c:dH:hil:qr:vu:")) != -1) {
+	while ((ch = getopt(argc, argv, "a:b:C:c:dH:hil:P:qr:vu:")) != -1) {
 		switch (ch) {
 		case 'a': /* alarm */
 			func |= BIOC_ALARM;
@@ -147,6 +148,9 @@
 			func |= BIOC_DEVLIST;
 			dev_list = optarg;
 			break;
+		case 'P':
+			pass_file = optarg;
+			break;
 		case 'r':
 			rflag = strtonum(optarg, 1000, 1<<30, &errstr);
 			if (errstr != NULL)
@@ -879,10 +883,31 @@
 	if (rounds < 1000)
 		errx(1, "Too less rounds: %d", rounds);
 
-	/* get passphrase */
-	if (readpassphrase("Passphrase: ", passphrase, sizeof(passphrase),
-	    RPP_REQUIRE_TTY) == NULL)
-		errx(1, "unable to read passphrase");
+	if (pass_file == NULL) {
+		/* get passphrase */
+		if (readpassphrase("Passphrase: ", passphrase,
+		    sizeof(passphrase), RPP_REQUIRE_TTY) == NULL)
+			errx(1, "unable to read passphrase");
+	} else {
+		ssize_t nb;
+		int i, fd;
+
+		if ((fd = open(pass_file, O_RDONLY)) < 0)
+			err(1, "open %s", pass_file);
+
+		if ((nb = read(fd, passphrase, sizeof(passphrase))) < 0)
+			err(1, "read %s", pass_file);
+
+		for (i = 0; i < nb; i++)
+			if (passphrase[i] == '\n' || passphrase[i] == '\0')
+				break;
+		if (i == nb || passphrase[i] == '\0' || ++i != nb)
+			errx(1, "Invalid passphrase file");
+
+		(void)close(fd);
+		passphrase[--i] = '\0';
+		verify = 0;
+	}
 
 	if (verify) {
 		/* request user to re-type it */
