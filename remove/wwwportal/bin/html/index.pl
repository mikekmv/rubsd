#!/usr/bin/perl 
# Скрипт для генерирования index.html в каталогах YYYY.MM
use Getopt::Std;

# Debug level :)
my $debug = 0;

# Корневой каталог, где находятся диры в формате YYYY.MM
my $rdir = "/home/mil/devel/html/out";

# Путь к файлу с шаблоном, на основе которой будет 
# генерироваться index.html
my $pattern = "$rdir/../index.html";

my %opts=(
	A => 0, # Обработка всех каталагов из $rdir, формата YYYY.MM
	d => 0, # Дебуг левел (0 - не использовать отладку)
	r => "", # Указать рутовый каталог ($rdir)
	f => "", # Обработать указанный каталог
);
getopts('dAhf:r:i:m:', \%opts);

&usage() if ( $opts{"h"} == 1 );

if ( $opts{"d"} == 1 || $debug > 0 ) {
	foreach $key (keys %opts) {
		warn "[debug] Getopt: key $key = $opts{$key}\n"
	}
}

if ( $opts{"r"} ne "" ) { 
		$rdir = $opts{"r"}; 
		$rdir =~ s/(.*?)\/$/$1/gims;
}

die "Root directory $rdir doesn't exist!\n" if !-d $rdir;

warn "Root directory: $rdir\n" if ( $opts{"d"} == 1 || $debug > 0 );

if ( $opts{"f"} ne "" ) {

	if ( !-d $opts{"f"} ) { 
		warn "Directory ",$opts{"f"}," dosen't exist!\n";
		&usage();
	} else { &pdir($opts{"f"}); }

} elsif ( $opts{"A"} != 0 ) {
	&adir();
} elsif ( $opts{"m"} ne "" ) {

	&usage() if ( $opts{"m"} !~ m/^\d{4}\.\d{2}$/g );
	my $root = $rdir."/".$opts{"m"};
	if ( !-d $root ) {
		warn "Directory $root dosen't exist!\n";
		&usage();
        } else { &pdir($root) }
	
} else {
	my $cmon = `/bin/date '+%Y.%m'`; chomp($cmon);
	my $root = $rdir."/".$cmon;
	if ( !-d $root ) {
		warn "Directory $root dosen't exist!\n";
		&usage();
        } else { &pdir($root) }
}

exit;

sub usage {

$usage = "
Usage: $0 [-r path to root dir] [-d] <-A|-f directory|-m>
-A Process all directories from root dir
-f Process specified directory
-r Specify the root directory
-d Enable debug messages
-m Specify date dir to parse (YYYY.MM) (root dir must be defined)

By default current month will be processed.

";
	die $usage;
}

sub adir {
	my $dir = "";
	opendir(DIR, $rdir) or die "Can't opendir $rdir: $!\n";
	while( defined ($dir = readdir(DIR)) ) {
		$dir = "$rdir/$dir";
		next if -f $dir or $dir =~ m|\/\.{1,2}$|g;
		&pdir($dir);
	}		
	closedir(DIR);
}

sub pdir {
	my $dir = shift;
	return if !-d $dir or $dir =~ m|\/\.{1,2}$|g;
	print "==> $dir\n";

	chdir $dir;

	my $nfile = "";

	opendir(DIR, ".") or die "Can't opendir .: $!\n";
	while( defined ($nfile = readdir(DIR)) ) {
		$nfile = "./$nfile";
		next if !-f $nfile or (-f $nfile 
			&& $nfile !~ m/^\.\/\d+\.htm.?$/g);
		push @files, $nfile;
	}		
	closedir(DIR);

	@files = sort {$b <=> $a} @files;

	my $total = scalar (@files);

	open(INDEX, "> index.html") || die "$!\n";


	my $dir_tmp = $dir;
	if ( $dir_tmp =~ m/\/(\d+\.\d+)$/g ) { $dir_tmp = $1; }
	else { $dir_tmp = "Data unknown" }

print INDEX << "EOF";
<!doctype html public "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
    <META NAME="Author" content="Dennis S.Davidoff">
    <META NAME="News" content="bsdnews, $dir_tmp">
    <title>tty.net.ru: $dir_tmp</title>
</head>
<body bgcolor="#ffffff" link="#35567a" alink="#35567a" vlink="#35567a">

<h2 align="right"><i>$dir_tmp</i></h2>
<strong>$total news sorted by date</strong>
<hr noshade>
<ul>

EOF

	foreach $file (@files) 
	{
		my $arr = "";
		open(F, "< $file") || die "Can't open $file: $!\n";
		while(<F>) { chomp; $arr .= $_; }
		close(F);

		my $topic = "";
		if ( $arr =~ m/<meta name=\"news\" content=\"(.*?)\">/gims ) {
			$topic = $1;
		}

		my $author = "";
		if ( $arr =~ m|<li><strong>Author:</strong> (.*?)</li>|gims ) {
			$author = $1;
		}

		my $date = "";
		if ( $arr =~ m|<li><strong>Date:</strong> (.*?)</li>|gims ) {
			$date = $1;
		}

print INDEX << "EOF";
<li><a href="$file"><strong>$topic</strong></a> <em>$author<small> ($date)</small></em></li>
EOF

	}

my $cdate = `/bin/date`; chomp($cdate);

print INDEX << "EOF";
</ul>
<p>
<hr noshade>
<small>
<em>
This news was generated by <a href="http://tty.net.ru"> index.pl</a> 
: $cdate
</em>
</small>

</body>
</html>
EOF
	close(INDEX);
}

