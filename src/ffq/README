НАЗВАНИЕ

Предварительное название - HFQ или HWFQ - Hashed [Weighted ?] Fair Queue
(модификация устоявшегося термина "WFQ")
 

ОПИСАНИЕ

HFQ - реализация идей WFQ/SFQ, дисциплина обслуживания очереди ALTQ 
для обеспечения справедливого (равного) пакетрейта каждому участвующему
хосту (или соединению, если учитываются номера портов). Что при равных
размерах пакетов обеспечивает равную же битовую скорость.

Близкие аналоги - Cisco WFQ (8-битный хеш, сессии), ALTQ3 WFQ (8-битный 
хеш, хосты), Linux SFQ (?-битный хеш, сессии) и ESFQ (хосты).

Дисциплина, в первую очередь, призвана устранить эффект выдавливания 
хоста из очереди, другим хостом с более высоким пакетрейтом (обычно 
достигаемым многопоточным скачиванием).

Для этого, каждый пакет хешируется (по хосту назначения или 
хосту-источнику, а также, номерам портов, если необходимо) и помещается 
в очередь с чередованием пакетов по хешу, как можно ближе к началу 
очереди. Таким образом, вне зависимости от соотношения числа пакетов 
разных хостов в очереди, количество пакетов отправляемое в единицу 
времени для каждого хоста будет равным.

Перегрузка (переполнение очереди) обрабатывает 

Перегрузка (переполнении очереди) обрабатывается для каждого 
хоста (хеша) в отдельности (с лимитом меньшим размера очереди) с 
применением механизма tail-drop (отбрасывание непомещающегося пакета). 
Опции RED/RIO (изберательно для хоста или для всей очереди) и ECN 
рассматриваются.

Кроме обычных для шейпинговых алгоритмов ограничений (как, например, 
нулевая эффективность при наличии предварительного ограничения 
скорости), HFQ имеет ряд специфических ограничений:

* HFQ показывает наибольшую эффективность при 100% загрузке канала. При 
меньшей загрузке в очереди скапливается (и упорядочивается) меньшее 
число пакетов и меньшее количество одновременно обнаруживаемых активных 
хостов (трафик разных хостов попадает в очередь попеременно).

* HFQ эффективен только для трафика различаемого при хешировании. 
Неподдерживаемые протоколы (текущая реализация хеширует только IPv4) 
хешируются зарезервированным значением хеша (или его источника). Для 
снижения возможности совпадения хешей, применяется хеш большой 
разрядности (в текущей реализации - 32 бита, против 8 в WFQ). Для 
устранения статичности совпадений, планируется использовать в источнике 
временную составляющую, например время в минутах; не реализовано).

ТЕКУЩАЯ РЕАЛИЗАЦИЯ И ОГРАНИЧЕНИЯ

Текущая тестовая реализация - хак внутри ядра, без изменения 
конфигуратора (pfctl(8) и /dev/pf), поэтому код HFQ _заменяет_ собой 
дисциплину RED. Таким образом указание в правиле опции "red" включает 
HFQ вместо RED (использование которого на той же машине становится 
невозможным).

По умолчанию хешируется адрес назначения (шейпинг входящего трафика 
клиента), для хеширования адреса источника нужно указать опцию RED 
"ecn".  

Лимит для хоста в текущей реализации - размер очереди деленный на четыре.

Патч для OpenBSD также изменяет net/pf.c, чтобы HFQ (как и ECN в 
оригинале) можно было использовать c default queue (патч 
предложенный для добавления в -current).
Патч для FreeBSD таких изменений не содержит, поэтому использование 
HFQ для default queue на FreeBSD пока невозможно.

TODOs

>> Взаимодействие с приоритетами ALTQ ?
>> Соотношение иное чем 1:1 без необходимости определять пару тыщ очередей
